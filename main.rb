require 'net/http'
require 'uri'
require 'optparse'

def check_clickjacking(url)
  """
  Check if a website is vulnerable to clickjacking.

  Args:
      url (str): The URL of the website to check.

  Returns:
      bool: True if the website is vulnerable to clickjacking, False otherwise.
  """
  begin
    uri = URI.parse(url)
    uri = URI.parse("https://#{url}") unless uri.scheme

    response = Net::HTTP.get_response(uri)
    headers = response.to_hash

    return true unless headers.key?('x-frame-options')

    x_frame_options = headers['x-frame-options'].first.downcase
    return true unless ['deny', 'sameorigin'].include?(x_frame_options)

    false
  rescue StandardError => e
    puts "An error occurred while checking #{url} - #{e}"
    false
  end
end

def main
  """
  Parse command-line arguments and check the specified URL for clickjacking vulnerability.
  """
  options = {}
  OptionParser.new do |opts|
    opts.banner = 'Usage: clickjacking_scanner.rb [options]'

    opts.on('-u', '--url URL', 'The URL of the website to check') do |url|
      options[:url] = url
    end

    opts.on('-l', '--log', 'Print out the response headers for analysis') do
      options[:log] = true
    end
  end.parse!

  url = options[:url]
  if url.nil?
    puts 'URL is required. Use -u or --url to specify the URL.'
    exit
  end

  is_vulnerable = check_clickjacking(url)

  if is_vulnerable
    puts "[+] #{url} may be vulnerable to clickjacking."
  else
    puts "[-] #{url} is not vulnerable to clickjacking."
  end

  if options[:log]
    uri = URI.parse(url)
    uri = URI.parse("https://#{url}") unless uri.scheme

    response = Net::HTTP.get_response(uri)
    puts "\nResponse Headers:"
    response.each_header do |header, value|
      puts "#{header}: #{value}"
    end
  end
end

main if __FILE__ == $PROGRAM_NAME
